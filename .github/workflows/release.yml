name: Tag release

run-name: "Tag release '${{ inputs.git-ref || github.ref_name }}' (publish: ${{ inputs.publish || github.event_name == 'push' }}, latest: ${{ inputs.latest || github.event_name == 'schedule' }})"

on:
  workflow_dispatch:
    inputs:
      git-ref:
        required: true
        type: string
        description: "The github ref of this release. If you are publishing it, use a tag (i.e. v1.0.0)."
        default: main
      latest:
        required: false
        type: boolean
        default: false
        description: "Consider this release as the latest one and update the Docker image tag and the binary pointer for the installers"
      publish:
        required: false
        type: boolean
        default: false
        description: "Publish the release"
  push:
    tags:
      - "v*.*.*"

defaults:
  run:
    shell: bash

jobs:
  checks:
    name: Pre-release checks
    runs-on: ubuntu-latest
    env:
      GIT_REF: ${{ inputs.git-ref || github.ref_name }}
    steps:
      - name: Verify that the provided git_ref is a tag when 'publish' is true
        if: ${{ inputs.publish || github.event_name == 'push' }}
        run: |
          git tag -l | grep -w $GIT_REF || (echo "The provided git_ref '$GIT_REF' is not a tag" && exit 1)

<<<<<<< HEAD
  test:
    name: Test
    needs: [checks]
    runs-on: ubuntu-latest-16-cores
    steps:
      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.71.1

      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git-ref || github.ref_name }}

      - name: Setup cache
        uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ ( inputs.git-ref || github.ref_name ) == 'main' }}

      - name: Free up some disk space
        run: |
          (set -x; df -h)
          # Free up some disk space by removing unused files
          (set -x; sudo rm -rf /imagegeneration || true)
          (set -x; sudo rm -rf /opt/az || true)
          (set -x; sudo rm -rf /opt/hostedtoolcache || true)
          (set -x; sudo rm -rf /opt/google || true)
          (set -x; sudo rm -rf /opt/pipx || true)
          (set -x; df -h)

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - name: Test workspace + coverage
        run: cargo make ci-workspace-coverage

      - name: Debug info
        if: always()
        run: |
          set -x
          free -m
          df -h
          ps auxf
          cat /tmp/surrealdb.log || true

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: target/llvm-cov/html/
          retention-days: 5

  lint:
    name: Lint
    needs: [checks]
    runs-on: ubuntu-latest-16-cores
    steps:

      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.git-ref || github.ref_name }}

      - name: Install stable toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: 1.71.1
          targets: wasm32-unknown-unknown
          components: rustfmt, clippy

      - name: Install cargo-make
        run: cargo install --debug --locked cargo-make

      - name: Check workspace
        run: cargo make ci-check

      - name: Check format
        run: cargo make ci-format

      - name: Check wasm
        run: cargo make ci-check-wasm

      - name: Check clippy
        run: cargo make ci-clippy

=======
>>>>>>> be54897b (reusable dir. Put test and lint inside publish_version)
  release:
    name: Prepare release
    needs: [checks]
    uses: ./.github/workflows/reusable_publish_version.yml
    with:
      git-ref: ${{ inputs.git-ref || github.ref_name }}
      latest: ${{ inputs.latest || github.event_name == 'push' }}
      publish: ${{ inputs.publish || github.event_name == 'push' }}
      create-release: ${{ inputs.publish || github.event_name == 'push' }}
    secrets: inherit
